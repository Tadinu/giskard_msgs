# goal

# definitions of possible values to use as type
# the following types can be added to create new combinations. e.g. PLAN_AND_EXECUTE = PLAN_ONLY + EXECUTE
int64 UNDEFINED=0
int64 PLAN_ONLY=1 
int64 CHECK_REACHABILITY=2 # don't use on its own! Different planning parameters that speed up planning but don't create nice trajectories, don't use with execute!
int64 EXECUTE=4 # don't use on its own! Result gets send to the robot
int64 SKIP_FAILURES=8 # don't use on its own! If there are multiple move commands, failures are skipped.
int64 CUT_OFF_SHAKING=16 # don't use on its own! If endless shaking is detected, the size of the detection window is cut off from the trajectory and it is executed anyway

# predefined combinations
int64 PLAN_AND_CHECK_REACHABILITY=3
int64 PLAN_AND_EXECUTE=5
int64 PLAN_AND_SKIP_FAILURES=9
int64 PLAN_AND_EXECUTE_AND_SKIP_FAILURES=13
int64 PLAN_AND_EXECUTE_AND_CUT_OFF_SHAKING=21

# use one of the above constants to indicate the goal type
int64 type

# sequence of movement commands to execute
giskard_msgs/MoveCmd[] cmd_seq  
---
# result

# definition of possible error code values
int64 SUCCESS=0
int64 ERROR=1 # if no code fits
int64 PREEMPTED=2 # if no code fits

# solver exceptions
int64 QP_SOLVER_ERROR=10 # if no solver code fits
int64 MAX_NWSR_REACHED=11 # increasing NWSR in config file might fix this
int64 OUT_OF_JOINT_LIMITS=12
int64 HARD_CONSTRAINTS_VIOLATED=13 # conflicting hard constraints, probably because of collision avoidance
int64 EMPTY_PROBLEM=14

# world state exceptions
int64 WORLD_ERROR=20 # if no world error fits
int64 UNKNOWN_GROUP=21

# error during motion problem building phase
int64 CONSTRAINT_ERROR=30 # if no constraint code fits
int64 UNKNOWN_CONSTRAINT=31
int64 CONSTRAINT_INITIALIZATION_ERROR=32
int64 INVALID_GOAL=33

# errors during planning
int64 PLANNING_ERROR=40 # if no planning code fits
int64 SHAKING=41 # Planning was stopped because the trajectory contains a shaky velocity profile. Detection parameters can be tuned in config file
int64 UNREACHABLE=42 # if reachability check fails
int64 SELF_COLLISION_VIOLATED=43 # if reachability check fails

# errors during execution
int64 EXECUTION_ERROR=500 # if no execution code fits
int64 EXECUTION_PREEMPTED=501 # goal got canceled via action server interface
int64 EXECUTION_TIMEOUT=502 
int64 EXECUTION_SUCCEEDED_PREMATURELY=503
int64 FOLLOW_JOINT_TRAJECTORY_INVALID_GOAL=510 
int64 FOLLOW_JOINT_TRAJECTORY_INVALID_JOINTS=511 
int64 FOLLOW_JOINT_TRAJECTORY_OLD_HEADER_TIMESTAMP=512 
int64 FOLLOW_JOINT_TRAJECTORY_PATH_TOLERANCE_VIOLATED=513 
int64 FOLLOW_JOINT_TRAJECTORY_GOAL_TOLERANCE_VIOLATED=514 

# error codes and messages for each command
int64[] error_codes

string[] error_messages

# planned trajectory
trajectory_msgs/JointTrajectory trajectory
---
# feedback

# definitions of possible action phases
int64 UNDEFINED=0
int64 PLANNING=2
int64 EXECUTION=3
int64 IDLE=1

# cmd that is currently being planned
int64 cmd_id

int64 state
